services:
  nextjs-app:
    image: hoanquocbao/portforlio-nextjs-app
    container_name: nextjs-app
    restart: always
    build:
      context: .
      target: ${NODE_ENV}
      dockerfile: ./dockerfile
    ports:
      - "${APP_PORT}:3000"
    volumes:
      - ./next-app/src:/app/src
      - ./next-app/package.json:/app/package.json
      - ./next-app/public:/app/public
      - ./next-app/middleware.ts:/app/middleware.ts
      - ./.env:/app/.env
    env_file:
      - .env
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
  database:
    image: postgres:15
    container_name: database
    restart: always
    env_file:
      - .env
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - ../postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-p", "${DATABASE_PORT}"]
    networks:
      - portfolio-network
  nestjs-server:
    image: hoanquocbao/portforlio-nestjs-server
    container_name: nestjs-server
    restart: always
    depends_on:
      - database
    build:
      context: .
      target: ${NODE_ENV}
      dockerfile: ./server.dockerfile
    ports:
      - "${SERVER_PORT}:7110"
    volumes:
      - ./nest-server/src:/server/src
      - ./nest-server/package.json:/server/package.json
      - .env:/server/.env
      - ./nest-server/prisma:/server/prisma
    env_file:
      - .env
    networks:
      - portfolio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SERVER_PORT}/"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres_data:
networks:
  portfolio-network:
    driver: bridge
