name: Deploy Project
on:
  push:
    branches:
      - master
jobs:
  build-and-push-nestjs-server:
    name: Build nestJs image and push to docker hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create .env file
        run: echo "${{ secrets.APP_ENV }}" > .env
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push nestjs-server image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/portforlio-nestjs-server:latest -f ./server.dockerfile ./
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/portforlio-nestjs-server:latest
  build-and-push-nextjs-app:
    name: Build nextJs image and push to docker hub
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create .env file
        run: echo "${{ secrets.APP_ENV }}" > .env
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push nextjs-app image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/portforlio-nextjs-app:latest -f ./dockerfile ./
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/portforlio-nextjs-app:latest
  deploy:
    name: Deploy server and app into host
    needs:
      - build-and-push-nestjs-server
      - build-and-push-nextjs-app
    runs-on: self-hosted
    steps:
      - name: Fetch latest code
        working-directory: /home/baohoang/Project/porfolio-project
        run: |
          git fetch origin master
          git reset --hard origin/master
      - name: Update .env file
        working-directory: /home/baohoang/Project/porfolio-project
        run: |
          rm -f .env
          echo "${{ secrets.APP_ENV }}" > .env
      - name: Pull images and start new images in docker-compose
        working-directory: /home/baohoang/Project/porfolio-project
        run: |
          docker compose pull
          docker compose up -d
      - name: Migrate database
        working-directory: /home/baohoang/Project/porfolio-project/nest-server
        run: npm run docker:prisma:migrate
      - name: Clean up old images (optional)
        run: docker image prune -f
